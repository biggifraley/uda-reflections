When would you want to use a remote repository rather than keeping all your work
local?

    Remote repositories make sense when there are a) multiple contributors to
    a project, or b) I access my project from multiple computers.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I might not be ready to work on or with the changes on the remote repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is basically cloning someone else's Github project into a Github
    repository of my own. I would use it when I don't have permission to make
    changes to the existing repository, or when I want to create a project of
    my own that's based on an existing project from someone else.
    Cloning copies Github repositories to my local machine in order to make
    changes to the project locally.
    Branches are used to test out experimental features, for example, that
    I am not sure I want to make in the master branch / public version / or
    production code. They can also be used to create different language versions.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows me to run the diff command to quickly compare the changes made
    remotely and locally.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would probably have to collaborate in person or via email. It would be hard
    to keep track of everybody's proposed changes / merges / pull requests. And,
    it would be even harder comparing the changes and possible merge conflicts.
    If we'd collaborate in person, it would be easier to ask quick questions and
    consult with everyone involved.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    This is the best method when collaborating with other contributors. This way,
    everyone can implement and test changes locally without any conflicts, until
    we are ready to combine everyone's changes into the master branch.
